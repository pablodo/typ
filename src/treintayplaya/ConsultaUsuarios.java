/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package treintayplaya;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author sergio
 */
public class ConsultaUsuarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form mantenimientoBancos
     */
    public static javax.swing.table.DefaultTableModel modelo;
    public static java.sql.Connection cnx;
    public ArrayList<Integer> ids;
    
    public ConsultaUsuarios() {
        modelo = new javax.swing.table.DefaultTableModel();
        cnx = Conexion.getInstance().getConnection();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")  
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtblUsuarios = new javax.swing.JTable(){     public boolean isCellEditable(int row, int col){         return false;     } };
        jbtnAgregar = new javax.swing.JButton();
        jbtnBorrar = new javax.swing.JButton();
        jbtnActualizar = new javax.swing.JButton();
        jbtnCerrar = new javax.swing.JButton();
        jchkMostrarTodos = new javax.swing.JCheckBox();

        setClosable(true);
        setTitle("Consulta de Usuarios");

        jtblUsuarios.setModel(modelo);
        jtblUsuarios.setGridColor(new java.awt.Color(204, 204, 204));
        modelo.addColumn("Tipo de Unidad Funcional");
        modelo.addColumn("M2.");
        modelo.addColumn("Ambientes");
        modelo.addColumn("Ubicaci√≥n");

        cargaTabla();
        jScrollPane1.setViewportView(jtblUsuarios);

        jbtnAgregar.setMnemonic('A');
        jbtnAgregar.setText("Agregar");
        jbtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAgregarActionPerformed(evt);
            }
        });

        jbtnBorrar.setMnemonic('B');
        jbtnBorrar.setText("Borrar");
        jbtnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBorrarActionPerformed(evt);
            }
        });

        jbtnActualizar.setMnemonic('T');
        jbtnActualizar.setText("Actualizar");
        jbtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnActualizarActionPerformed(evt);
            }
        });

        jbtnCerrar.setMnemonic('C');
        jbtnCerrar.setText("Cerrar");
        jbtnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCerrarActionPerformed(evt);
            }
        });

        jchkMostrarTodos.setText("Mostrar usuarios inactivos");
        jchkMostrarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkMostrarTodosActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jchkMostrarTodos)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jbtnAgregar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbtnBorrar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbtnActualizar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbtnCerrar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 804, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 412, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(0, 15, Short.MAX_VALUE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jbtnAgregar)
                            .add(jbtnBorrar)
                            .add(jbtnActualizar)
                            .add(jbtnCerrar)))
                    .add(layout.createSequentialGroup()
                        .add(jchkMostrarTodos)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_jbtnCerrarActionPerformed

    private void jbtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAgregarActionPerformed
		jtblUsuarios.clearSelection();		
        NuevoUsuario nUsr = new NuevoUsuario(this);
        AppPrincipal.desktopPane.add(nUsr);
        nUsr.toFront();
        nUsr.show(); 
    }//GEN-LAST:event_jbtnAgregarActionPerformed

    private void jbtnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBorrarActionPerformed
        try {
            String query = "UPDATE UsuariosWeb SET usrActivo = 0 WHERE usrID = ?";
            java.sql.PreparedStatement pstm = cnx.prepareStatement(query);
            pstm.setInt(1, ids.get(jtblUsuarios.getSelectedRow()));
            pstm.execute();
            pstm.close();
            cargaTabla();
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnBorrarActionPerformed

    private void jbtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnActualizarActionPerformed
       int row = jtblUsuarios.getSelectedRow();
       if (ids.size() < row|| row < 0){
           return;
       }
       NuevoUsuario nUsr = new NuevoUsuario(this);
       AppPrincipal.desktopPane.add(nUsr);
       nUsr.toFront();
       nUsr.show(); 
    }//GEN-LAST:event_jbtnActualizarActionPerformed

    private void jchkMostrarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkMostrarTodosActionPerformed
        cargaTabla();
    }//GEN-LAST:event_jchkMostrarTodosActionPerformed

    public void cargaTabla() {
        try {
            java.sql.Statement stm = cnx.createStatement();
			String query = "SELECT * FROM UsuariosWeb ";
            if (! jchkMostrarTodos.isSelected())   
                query += "WHERE usrActivo = 1 ";
            query += "ORDER BY usrEmail DESC";
            java.sql.ResultSet rst = stm.executeQuery(query);
            
            ids = new ArrayList<Integer>();
            modelo = new javax.swing.table.DefaultTableModel();
            jtblUsuarios.setModel(modelo);
            Object[] headers = {"Email", 
								"Administrador"};
            modelo.setColumnIdentifiers(headers);
            while(rst.next()) {
                ids.add(rst.getInt("usrID"));
                int admin = rst.getInt("usrNivel");
                Object [] fila = {rst.getString("usrEmail"),
                                  admin==1?"Si":"No"};
                modelo.addRow(fila);
            }
            rst.close();
            stm.close();
        } catch (java.sql.SQLException sqle) {
            sqle.printStackTrace();
		}
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnActualizar;
    private javax.swing.JButton jbtnAgregar;
    private javax.swing.JButton jbtnBorrar;
    private javax.swing.JButton jbtnCerrar;
    private javax.swing.JCheckBox jchkMostrarTodos;
    public javax.swing.JTable jtblUsuarios;
    // End of variables declaration//GEN-END:variables
}
