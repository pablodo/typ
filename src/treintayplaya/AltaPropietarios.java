/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AltaPropietarios.java
 *
 * Created on 13-dic-2011, 10:14:10
 */
package treintayplaya;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Pablo
 */
public class AltaPropietarios extends javax.swing.JInternalFrame {
    public final static int ACTUALIZAR=1;
    public final static int ALTA=0;
    private int estado;
    private int propID;    
    java.sql.Connection cnx;
    
    /** Creates new form AltaPropietarios */
    public AltaPropietarios(int propID) {
        this.estado = ALTA;
        if (propID > 0){
            this.estado = ACTUALIZAR;
            this.propID = propID;
        }
        cnx = Conexion.getInstance().getConnection();
        initComponents();
        cargaCombos();
        if (estado == ACTUALIZAR){
            setTitle("Actualizar Propietario");
            cargarPropietario();
        }  
        getRootPane().setDefaultButton(jbtnAceptar);
    }
    
    public AltaPropietarios(){
        this(0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnCancelar = new javax.swing.JButton();
        jbtnAceptar = new javax.swing.JButton();
        jpnlPersonal = new javax.swing.JPanel();
        jlblApellido = new javax.swing.JLabel();
        jtxfApellido = new javax.swing.JTextField();
        jlblNombre = new javax.swing.JLabel();
        jtxfNombre = new javax.swing.JTextField();
        jlblEmail = new javax.swing.JLabel();
        jtxfEmail = new javax.swing.JTextField();
        jlblTelefono = new javax.swing.JLabel();
        jftfTelefono = new javax.swing.JFormattedTextField();
        jlblCelular = new javax.swing.JLabel();
        jftfCelular = new javax.swing.JFormattedTextField();
        jpnlUF = new javax.swing.JPanel();
        jcbxUF = new ComboTabla();
        jlblUF = new javax.swing.JLabel();
        jpnlBancario = new javax.swing.JPanel();
        jlblCUIT = new javax.swing.JLabel();
        jftfCUIT = new javax.swing.JFormattedTextField();
        jlblBanco = new javax.swing.JLabel();
        jcbxBanco = new ComboTabla();
        jlblTCuenta = new javax.swing.JLabel();
        jcbxTCuenta = new ComboTabla();
        jlblNCuenta = new javax.swing.JLabel();
        jtxfNCuenta = new javax.swing.JTextField();
        jlblCBU = new javax.swing.JLabel();
        jtxfCBU = new javax.swing.JTextField();

        setTitle("Alta de Propietarios");

        jbtnCancelar.setText("Cancelar");
        jbtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelarActionPerformed(evt);
            }
        });

        jbtnAceptar.setText("Aceptar");
        jbtnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAceptarActionPerformed(evt);
            }
        });

        jpnlPersonal.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Personales"));

        jlblApellido.setText("Apellido:");

        jtxfApellido.setDocument(new FixedLengthDocument(50));

        jlblNombre.setText("Nombre:");

        jtxfNombre.setDocument(new FixedLengthDocument(50));

        jlblEmail.setText("Email:");

        jtxfEmail.setDocument(new FixedLengthDocument(60));

        jlblTelefono.setText("Tel√©fono:");

        try {
            jftfTelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftfTelefono.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        jlblCelular.setText("Celular:");

        try {
            jftfCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftfCelular.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        org.jdesktop.layout.GroupLayout jpnlPersonalLayout = new org.jdesktop.layout.GroupLayout(jpnlPersonal);
        jpnlPersonal.setLayout(jpnlPersonalLayout);
        jpnlPersonalLayout.setHorizontalGroup(
            jpnlPersonalLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpnlPersonalLayout.createSequentialGroup()
                .addContainerGap()
                .add(jpnlPersonalLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jlblNombre)
                    .add(jlblEmail)
                    .add(jlblTelefono)
                    .add(jlblApellido))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jpnlPersonalLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jtxfNombre)
                    .add(jpnlPersonalLayout.createSequentialGroup()
                        .add(jftfTelefono, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 285, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jlblCelular)
                        .add(18, 18, 18)
                        .add(jftfCelular, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE))
                    .add(jtxfEmail)
                    .add(jtxfApellido))
                .addContainerGap())
        );
        jpnlPersonalLayout.setVerticalGroup(
            jpnlPersonalLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpnlPersonalLayout.createSequentialGroup()
                .add(15, 15, 15)
                .add(jpnlPersonalLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jlblApellido)
                    .add(jtxfApellido, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jpnlPersonalLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtxfNombre, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlblNombre))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jpnlPersonalLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtxfEmail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlblEmail))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jpnlPersonalLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jftfTelefono, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlblCelular)
                    .add(jlblTelefono)
                    .add(jftfCelular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jpnlUF.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de Propiedad"));

        jlblUF.setText("Unidad Funcional:");

        org.jdesktop.layout.GroupLayout jpnlUFLayout = new org.jdesktop.layout.GroupLayout(jpnlUF);
        jpnlUF.setLayout(jpnlUFLayout);
        jpnlUFLayout.setHorizontalGroup(
            jpnlUFLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpnlUFLayout.createSequentialGroup()
                .addContainerGap()
                .add(jlblUF)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jcbxUF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 195, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnlUFLayout.setVerticalGroup(
            jpnlUFLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpnlUFLayout.createSequentialGroup()
                .add(7, 7, 7)
                .add(jpnlUFLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jlblUF)
                    .add(jcbxUF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(0, 16, Short.MAX_VALUE))
        );

        jpnlBancario.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Bancarios"));

        jlblCUIT.setText("CUIT:");

        try {
            jftfCUIT.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-########-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftfCUIT.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        jlblBanco.setText("Banco:");

        jlblTCuenta.setText("Tipo de Cuenta:");

        jlblNCuenta.setText("Nro. Cuenta:");

        jtxfNCuenta.setDocument(new FixedLengthDocument(20));

        jlblCBU.setText("CBU:");

        jtxfCBU.setDocument(new FixedLengthDocument(25));
        jtxfCBU.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        org.jdesktop.layout.GroupLayout jpnlBancarioLayout = new org.jdesktop.layout.GroupLayout(jpnlBancario);
        jpnlBancario.setLayout(jpnlBancarioLayout);
        jpnlBancarioLayout.setHorizontalGroup(
            jpnlBancarioLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpnlBancarioLayout.createSequentialGroup()
                .addContainerGap()
                .add(jpnlBancarioLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jpnlBancarioLayout.createSequentialGroup()
                        .add(jlblCBU)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jpnlBancarioLayout.createSequentialGroup()
                        .add(jpnlBancarioLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jlblCUIT)
                            .add(jlblBanco)
                            .add(jlblNCuenta))
                        .add(38, 38, 38)
                        .add(jpnlBancarioLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jtxfNCuenta)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jtxfCBU)
                            .add(jpnlBancarioLayout.createSequentialGroup()
                                .add(jpnlBancarioLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jftfCUIT, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jcbxBanco, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 22, Short.MAX_VALUE)
                                .add(jlblTCuenta)
                                .add(18, 18, 18)
                                .add(jcbxTCuenta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 238, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jpnlBancarioLayout.setVerticalGroup(
            jpnlBancarioLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpnlBancarioLayout.createSequentialGroup()
                .addContainerGap()
                .add(jpnlBancarioLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jftfCUIT, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlblCUIT))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jpnlBancarioLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jlblBanco)
                    .add(jcbxBanco, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlblTCuenta)
                    .add(jcbxTCuenta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jpnlBancarioLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtxfNCuenta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlblNCuenta))
                .add(18, 18, 18)
                .add(jpnlBancarioLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtxfCBU, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlblCBU))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jpnlUF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jpnlPersonal, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jpnlBancario, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jbtnAceptar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 106, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jbtnCancelar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jpnlPersonal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jpnlUF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jpnlBancario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jbtnAceptar)
                    .add(jbtnCancelar))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_jbtnCancelarActionPerformed

    private void jbtnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAceptarActionPerformed
        if (validaFormulario()){
            try {
                int result = insertPropietario();
                if(result == 1) {
                    ConsultaPropietarios.actualizaTablaPropietarios();
                    dispose();
                }
            } catch (SQLException ex) {
                Logger.getLogger(AltaPropietarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jbtnAceptarActionPerformed

    private void cargarPropietario() {
        try{    
            String query = "SELECT propApellido, propNombre, propTelefono, propCelular, propEmail, propCUIT, propBanco, propTCuenta, propNCuenta, propCBU, propUF FROM Propietarios WHERE propID =";
            query = query + " " + String.valueOf(propID);
            java.sql.Statement pstm = cnx.createStatement();
            java.sql.ResultSet rst = pstm.executeQuery(query);
            
            rst.next();
            jtxfApellido.setText(rst.getString("propApellido"));
            jtxfNombre.setText(rst.getString("propNombre"));
            jftfTelefono.setText(rst.getString("propTelefono"));
            jftfCelular.setText(rst.getString("propCelular"));
            jtxfEmail.setText(rst.getString("propEmail"));
            jftfCUIT.setText(rst.getString("propCUIT"));
            Integer banco = rst.getInt("propBanco");
            ((ComboTabla)jcbxBanco).setSelectedItemById(banco);
            Integer tCuenta = rst.getInt("propTCuenta");            
            ((ComboTabla)jcbxTCuenta).setSelectedItemById(tCuenta);
            jtxfNCuenta.setText(rst.getString("propNCuenta"));
            jtxfCBU.setText(rst.getString("propCBU"));
            ((ComboTabla) jcbxUF).setSelectedItemById(rst.getInt("propUF"));

        } catch(java.sql.SQLException sqle) {
            sqle.printStackTrace();
        }    
    }
    
    private void cargaCombos() {
        String sqlBancos = "SELECT bancoNombre, bancoID from Bancos order by bancoNombre";
        String sqlTCuentas = "SELECT tcNombre, tcID from TCuentas order by tcNombre";
        String sqlUF = "SELECT ufNombre, ufID FROM UnidadesFuncionales order by ufNombre";
        
        Funciones.cargarComboTabla((ComboTabla)jcbxBanco, sqlBancos, "bancoNombre", "bancoID");
        Funciones.cargarComboTabla((ComboTabla)jcbxTCuenta, sqlTCuentas, "tcNombre", "tcID");
        Funciones.cargarComboTabla((ComboTabla)jcbxUF, sqlUF, "ufNombre", "ufID");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtnAceptar;
    private javax.swing.JButton jbtnCancelar;
    private javax.swing.JComboBox jcbxBanco;
    private javax.swing.JComboBox jcbxTCuenta;
    private javax.swing.JComboBox jcbxUF;
    private javax.swing.JFormattedTextField jftfCUIT;
    private javax.swing.JFormattedTextField jftfCelular;
    private javax.swing.JFormattedTextField jftfTelefono;
    private javax.swing.JLabel jlblApellido;
    private javax.swing.JLabel jlblBanco;
    private javax.swing.JLabel jlblCBU;
    private javax.swing.JLabel jlblCUIT;
    private javax.swing.JLabel jlblCelular;
    private javax.swing.JLabel jlblEmail;
    private javax.swing.JLabel jlblNCuenta;
    private javax.swing.JLabel jlblNombre;
    private javax.swing.JLabel jlblTCuenta;
    private javax.swing.JLabel jlblTelefono;
    private javax.swing.JLabel jlblUF;
    private javax.swing.JPanel jpnlBancario;
    private javax.swing.JPanel jpnlPersonal;
    private javax.swing.JPanel jpnlUF;
    private javax.swing.JTextField jtxfApellido;
    private javax.swing.JTextField jtxfCBU;
    private javax.swing.JTextField jtxfEmail;
    private javax.swing.JTextField jtxfNCuenta;
    private javax.swing.JTextField jtxfNombre;
    // End of variables declaration//GEN-END:variables

    private boolean validaFormulario() {
        if ( ! Funciones.validaTextField(this, jtxfApellido, "Apellido")) {
            return false;
        }
        if ( ! Funciones.validaTextField(this, jtxfNombre, "Nombre")) {
            return false;
        }
        return true;
    }

    private int insertPropietario() throws SQLException {
        String query = "INSERT INTO Propietarios (propApellido, propNombre, propTelefono, propCelular, propEmail, propCUIT, propBanco, propTCuenta, propNCuenta, propCBU, propUF) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"; 
        if (estado == ACTUALIZAR){
            query = "UPDATE Propietarios SET propApellido=?, propNombre=?, propTelefono=?, propCelular=?, propEmail=?, propCUIT=?, propBanco=?, propTCuenta=?, propNCuenta=?, propCBU=?, propUF=? WHERE propID = ?";
        }
        java.sql.PreparedStatement pstm = cnx.prepareStatement(query);

        pstm.setString( 1, jtxfApellido.getText());
        pstm.setString( 2, jtxfNombre.getText());
        pstm.setString( 3, jftfTelefono.getText());
        pstm.setString( 4, jftfCelular.getText());
        pstm.setString( 5, jtxfEmail.getText());
        pstm.setString( 6, jftfCUIT.getText());
        pstm.setInt   ( 7, ((ComboTabla)jcbxBanco).getSelectedId());
        pstm.setInt   ( 8, ((ComboTabla)jcbxTCuenta).getSelectedId());
        pstm.setString( 9, jtxfNCuenta.getText());
        pstm.setString(10, jtxfCBU.getText());
        pstm.setInt   (11, ((ComboTabla)jcbxUF).getSelectedId());
        if (estado == ACTUALIZAR){
            pstm.setString(12, String.valueOf(propID));
        }
        int result = pstm.executeUpdate();
        pstm.close();
        return result;
    }
}
