package treintayplaya;

import java.lang.annotation.Annotation;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pablo
 */
public class Tags extends javax.swing.JInternalFrame {
	public static ArrayList<String> tags_alquiler = getTags(Alquiler.class); 

	/**
	 * Creates new form Tags
	 */
	public Tags() {
		initComponents();
		lista.setListData(tags_alquiler.toArray());
	}

	public static String replaceTags(String texto, Object objeto) throws Exception {
		return replaceTags(texto, objeto, getTags(objeto.getClass()));
	}

	public static String replaceTags(String texto, Object objeto, ArrayList<String> tags) throws Exception {
		for (String tag: tags) {
			try{
				Object rawValue = getValueByTag(objeto, tag);
				if (rawValue == null){
                    rawValue = "";
                }
                String value = Matcher.quoteReplacement(String.valueOf(rawValue));
                texto = texto.replaceAll(tag, value);
			}catch(Exception e){
				throw new Exception("Problem with tag " + tag + "\n" + e.getMessage());
			}
		}
		return texto;
	}

	public static ArrayList<String> getTags(Class clase) {
		ArrayList<String> tags = new ArrayList<String>();
		for (Field field: clase.getDeclaredFields()) {
			for (Annotation annotation: field.getDeclaredAnnotations())
				if (annotation.annotationType().equals(Tag.class)){
					String tag = "<" + field.getName().trim().toUpperCase() + ">";
					tags.add(tag);
				}
		}
		return tags;
	}

	public static Object getValueByTag(Object objeto, String tag) {
		Object value = new Object();
		tag = tag.toLowerCase().substring(1, tag.length() - 1); //desde el 1 hasta -1 para excluir los < >
		try {
			value = objeto.getClass().getDeclaredField(tag).get(objeto);
		} catch (Exception ex) {
			Logger.getLogger(ContratosFactory.class.getName()).log(Level.SEVERE, null, ex);
		}

		return value;
	}

	@Retention(RetentionPolicy.RUNTIME)	
	public @interface Tag{
	}

	public static void main(String args[]){
		String contrato = "<BANCO> <TITULAR_CUENTA> <BANCO_IMPUTADO> <TITULAR_CUENTA_IMPUTADA><DNI>";
		try {
			System.out.println(Tags.replaceTags(contrato, new Alquiler(22)));
		} catch (Exception ex) {
			Logger.getLogger(Tags.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new javax.swing.JPopupMenu();
        jmiCopiar = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList();

        jmiCopiar.setMnemonic('C');
        jmiCopiar.setText("Copiar");
        jmiCopiar.setToolTipText("");
        jmiCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCopiarActionPerformed(evt);
            }
        });
        menu.add(jmiCopiar);

        menu.getAccessibleContext().setAccessibleParent(lista);

        setClosable(true);
        setResizable(true);

        lista.setComponentPopupMenu(menu);
        jScrollPane1.setViewportView(lista);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void jmiCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCopiarActionPerformed
		if (lista.getSelectedIndex() < 0)
			return;
		Funciones.setClipboard(lista.getSelectedValue().toString());
	}//GEN-LAST:event_jmiCopiarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem jmiCopiar;
    private javax.swing.JList lista;
    private javax.swing.JPopupMenu menu;
    // End of variables declaration//GEN-END:variables
}
