package treintayplaya;

import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pablo
 */
public class Tags extends javax.swing.JInternalFrame {
	public static ArrayList<String> tags_alquiler = getTags(Alquiler.class); 

	/**
	 * Creates new form Tags
	 */
	public Tags() {
		initComponents();
		lista.setListData(tags_alquiler.toArray());
	}

	public static String replaceTags(String texto, Object objeto) {
		return replaceTags(texto, objeto, getTags(objeto.getClass()));
	}

	public static String replaceTags(String texto, Object objeto, ArrayList<String> tags) {
		for (int i = 0; i < tags.size(); i++) {
			String tag = tags.get(i);
			Object rawValue = getValueByTag(objeto, tag);
			if (rawValue != null) {
				String value = String.valueOf(rawValue);
				texto = texto.replaceAll(tag, value);
			}
		}
		return texto;
	}

	public static ArrayList<String> getTags(Class clase) {
		ArrayList<String> tags = new ArrayList<String>();
		Field[] fields = clase.getDeclaredFields();
		for (int i = 0; i < fields.length; i++) {
			if (!Modifier.isFinal(fields[i].getModifiers())) {
				String field = fields[i].getName();
				String tag = "<" + field.trim().toUpperCase() + ">";
				tags.add(tag);
			}
		}
		return tags;
	}

	public static Object getValueByTag(Object objeto, String tag) {
	Object value = new Object();
		tag = tag.toLowerCase().substring(1, tag.length() - 1); //desde el 1 hasta -1 para excluir los < >
		try {
			value = objeto.getClass().getDeclaredField(tag).get(objeto);
		} catch (Exception ex) {
			Logger.getLogger(ContratosFactory.class.getName()).log(Level.SEVERE, null, ex);
		}

		return value;
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList();

        setClosable(true);
        setResizable(true);

        jScrollPane1.setViewportView(lista);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lista;
    // End of variables declaration//GEN-END:variables
}
